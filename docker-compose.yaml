services: 
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - kafka-network

  postgres:
    image: postgres:14
    container_name: postgres
    env_file:
      - .env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - postgre-network
  
  location-service:
    build: 
      context: ./services/location-service
      dockerfile: Dockerfile
    container_name: location-service
    depends_on:
      - kafka
      - postgres
    ports:
      - "50051:50051"
      - "8080:8080"
    env_file:
      - ./services/location-service/.env
    networks:
      - postgre-network
      - kafka-network
    

  weather-service:
    build:
      context: ./services/weather-service
      dockerfile: Dockerfile
    container_name: weather-service
    depends_on:
      - kafka
      - postgres
    ports:
      - "50052:50052"
    env_file:
      - ./services/weather-service/.env
    networks:
      - postgre-network
      - kafka-network

networks:
  kafka-network:
    driver: bridge
  postgre-network:
    driver: bridge

volumes:
  postgres_data: